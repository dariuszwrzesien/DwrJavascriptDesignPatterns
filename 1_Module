var Module = function () {

	var privateVar = 'I'am private...';
	return {
		method: function () {
		...		
		}
		nextMethod: function () {
		...		
		}
	}
}




Przykładowa implementacja.


taskRepository.js
--------------------------

var repo = function () {

	var db = {} //np. połączenie z bazą. Ponieważ nie zwracamy tego w return ponizej jest to właściwość prywatna

	return {
		get: function(id) {
			console.log('Get ' + id);
			return {
				name: 'new task from repository'			
			}		
		}
		save: function(task) {
			console.log('Saving ' + task.name + ' to the db');		
		}
	}

}

module.exports = repo();


task.js
--------------------------
var Repo = require('./taskRepository');
var Task = function (data) {
	this.name = data.name;
}

Task.prototype.save = function () {
	console.log('saving Task' + this.name);
	Repo.save(this); 
}

module.exports = Task


main.js
----------------------------
var Task = require('./task');
var Repo = require('./taskRepository');

var task = new Task(Repo.get(1));
var task1 = new Task({name: 'test123'});
task.save();
task1.save();




